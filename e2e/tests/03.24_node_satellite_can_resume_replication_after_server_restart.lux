[doc NodeJS Satellite can resume replication after the sync service restarts]
# The focus in this tests is the correct state restoration on the server when it restarts.

[include _shared.luxinc]
[include _satellite_macros.luxinc]

[invoke setup]

[shell proxy_1]
    [invoke migrate_items_table 001]
    [invoke migrate_other_items_table 002]

[invoke setup_client 1 electric_1 5133]

[shell satellite_1]
    [invoke node_sync_items ""]
    [invoke node_sync_other_items ""]

# [shell pg_1]
#     !INSERT INTO public.blobs (id, blob) VALUES ('row1', '\x0001ff4a');
#     ??INSERT 0 1

# [shell satellite_1]
#     # Wait for the rows to arrive
#     [invoke node_await_get_blob "row1"]

#     # read raw blob that is stored in the DB
#     [invoke node_get_blob "row1" "Uint8Array(4) [ 0, 1, 255, 74 ]"]

#     # write and read null values
#     [invoke node_write_blob "row2" "null"]
#     [invoke node_get_blob "row2" "null"]

#     # write and read empty byte arrays
#     [invoke node_write_blob "row3" "new Uint8Array([])"]
#     [invoke node_get_blob "row3" "Uint8Array(0) []"]

#     # write regular bytestring values
#     [invoke node_write_blob "row4" "new Uint8Array([0, 1, 255, 182])"]
#     [invoke node_get_blob "row4" "Uint8Array(4) [ 0, 1, 255, 182 ]"]


# [shell pg_1]
#     [invoke wait-for "SELECT * FROM public.blobs;" "row4" 10 $psql]

#     !SELECT * FROM public.blobs;
#     ??row1 | \x0001ff4a
#     ??row2 | <NULL>
#     ??row3 | \x
#     ??row4 | \x0001ffb6

# Start a new Satellite client that has a different set of subscriptions
[invoke setup_client 2 electric_1 5133]

[shell satellite_2]
    [invoke node_sync_items ""]

    # Disconnect the client so that it does not see the next batch of updates
    [invoke client_disconnect]

[shell pg_1]
    !INSERT INTO public.items (id, content) VALUES (gen_random_uuid(), '...');
    ??INSERT 0 1

[shell satellite_1]
    #!clienet.add_item(...)


# Now restart the server, verify that both clients reconnect and are able to
# to catch up to the latest server state.

[cleanup]
  [invoke teardown]
